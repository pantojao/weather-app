{"version":3,"sources":["cityInput.js","App.js","index.js"],"names":["CityInput","props","sendCity","city","parentCallBack","console","log","handleChange","event","setState","input","target","value","handleSubmit","preventDefault","state","onSubmit","this","className","autoComplete","id","size","type","placeholder","onChange","required","React","Component","fetch","require","App","callbackFunction","childData","split","join","cityFromInput","then","response","json","data","name","country","sys","description","weather","map","firstChar","rest","toUpperCase","toLowerCase","temperature","Math","round","main","temp","icon","error","catch","errorOutput","weatherOutput","style","textAlign","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA4CiBA,E,kDAzCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,SAAW,SAACC,GACR,EAAKF,MAAMG,eAAeD,GAC1BE,QAAQC,IAAIH,IAVG,EAanBI,aAAe,SAACC,GACZ,EAAKC,SAAS,CACZC,MAAOF,EAAMG,OAAOC,SAfP,EAmBnBC,aAAe,SAACL,GACZA,EAAMM,iBACN,EAAKZ,SAAS,EAAKa,MAAML,OACzB,EAAKD,SAAS,CACVN,KAAM,EAAKY,MAAML,MACjBA,MAAO,MAtBb,EAAKK,MAAQ,CACTH,MAAO,GACPT,KAAK,IAJQ,E,qDA6BjB,OACE,6BACI,0BAAMa,SAAUC,KAAKJ,aAAcK,UAAU,wBAAwBC,aAAa,OAC9E,2BAAOA,aAAa,MAAMC,GAAG,kBAAmBC,KAAK,KAAMC,KAAK,OAAOJ,UAAU,0BAA0BK,YAAY,eAAeX,MAAOK,KAAKF,MAAML,MAAOc,SAAUP,KAAKV,aAAekB,UAAQ,IACrM,4BAAQP,UAAU,4BAAlB,gB,GAlCQQ,IAAMC,WCExBC,G,MAAQC,EAAQ,KAwEPC,E,kDApEb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAYR8B,iBAAmB,SAACC,GAClB,IAAI7B,EAAO6B,EAAUC,MAAM,KAAKC,KAAK,KACrC,EAAKzB,SAAS,CAAC0B,cAAehC,IAC9ByB,EAAM,qDAAD,OAAsDzB,EAAtD,2DACFiC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAK9B,SAAS,CAC1BN,KAAMoC,EAAKC,KACXC,QAASF,EAAKG,IAAID,QAClBE,YAAYJ,EAAKK,QAAQ,GAAGD,YAAYV,MAAM,KAAKY,KAAI,iCAAEC,EAAF,KAAeC,EAAf,kBAAuBD,EAAUE,cAAcD,EAAKb,KAAK,IAAIe,iBAAef,KAAK,KACxIgB,YAAYC,KAAKC,MAAMb,EAAKc,KAAKC,MACjCC,KAAMhB,EAAKK,QAAQ,GAAGW,KACtBC,MAAO,UAERC,OAAM,SAAAD,GAAK,OAAI,EAAK/C,SAAS,CAC5B+C,MAAO,gCAzBX,EAAKzC,MAAQ,CACXZ,KAAM,KACNsC,QAAS,KACTE,YAAY,KACZO,YAAY,EACZf,cAAc,KACdqB,MAAO,KACPD,KAAM,MATS,E,qDAgClB,IAAIG,EAOAC,EAcJ,OAnBED,EADqB,OAAnBzC,KAAKF,MAAMyC,MACA,uBAAGI,MAAQ,CAACC,UAAW,WAAvB,2BAEF,KAKZF,EADqB,OAAlB1C,KAAKF,MAAMZ,KAEZ,yBAAKe,UAAU,kBACb,4BAAMD,KAAKF,MAAMZ,KAAjB,KAA0Bc,KAAKF,MAAM0B,QAArC,KACA,wBAAIvB,UAAU,eAAgBD,KAAKF,MAAM4B,YAAzC,KACA,yBAAKzB,UAAU,eAAe4C,IAAG,2CAAsC7C,KAAKF,MAAMwC,KAAjD,WAAgEQ,IAAI,KACrG,4BAAM9C,KAAKF,MAAMmC,YAAjB,IAA+B,0CAIlB,KAIjB,yBAAKhC,UAAU,eACb,wBAAIA,UAAU,aAAd,eACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAWd,eAAgBa,KAAKc,mBAC/B2B,EACAC,Q,GA5DSjC,IAAMC,WCHxBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b0d8d799.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CityInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          value: '',\r\n          city:''\r\n        };\r\n    }\r\n\r\n    sendCity = (city) => {\r\n        this.props.parentCallBack(city)\r\n        console.log(city)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          input: event.target.value\r\n        });\r\n      }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.sendCity(this.state.input)\r\n        this.setState({\r\n            city: this.state.input,\r\n            input: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <form onSubmit={this.handleSubmit} className=\"form-group input-form\" autoComplete=\"off\" >\r\n                <input autoComplete=\"off\" id=\"searchTextField\"  size=\"50\"  type=\"text\" className=\"form-control task-input\" placeholder=\"New York, US\" value={this.state.input} onChange={this.handleChange}  required/>\r\n                <button className=\"srch-btn btn btn-primary\">Search</button>\r\n            </form>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  export default CityInput;","import React from 'react';\r\nimport CityInput from './cityInput.js'\r\nimport './App.css'\r\n\r\nconst fetch = require('node-fetch');\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: null,\r\n      country: null,\r\n      description:null,\r\n      temperature:0,\r\n      cityFromInput:null,\r\n      error: null,\r\n      icon: null, \r\n    };\r\n  }\r\n  \r\n  callbackFunction = (childData) => {\r\n    let city = childData.split(' ').join('+');\r\n    this.setState({cityFromInput: city})\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=14be81d715612331f39ca17b922a70ef`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ \r\n        city: data.name,\r\n        country: data.sys.country,\r\n        description:data.weather[0].description.split(\" \").map(([firstChar,...rest])=>firstChar.toUpperCase()+rest.join(\"\").toLowerCase()).join(\" \"),\r\n        temperature:Math.round(data.main.temp),\r\n        icon: data.weather[0].icon,\r\n        error: null\r\n        }))\r\n      .catch(error => this.setState({ \r\n        error: \"Please Enter Valid City\"\r\n        }));\r\n  }\r\n\r\n render(){\r\n   let errorOutput;\r\n   if (this.state.error!==null){\r\n     errorOutput= <p style= {{textAlign: \"center\" }}>Please Enter Valid City</p>;\r\n   } else {\r\n    errorOutput=null\r\n   }\r\n\r\n   let weatherOutput;\r\n   if (this.state.city!==null){\r\n    weatherOutput=(\r\n      <div className=\"weather-output\">\r\n        <h2>{(this.state.city)}, {this.state.country} </h2> \r\n        <h2 className=\"description\">{(this.state.description)} </h2>\r\n        <img className=\"weather-icon\" src={`http://openweathermap.org/img/wn/${this.state.icon}@2x.png`} alt=\"\"/> \r\n        <h2>{(this.state.temperature)} <span >&#8457;</span></h2>\r\n      </div>\r\n    )\r\n   } else {\r\n     weatherOutput = null\r\n   }\r\n\r\n   return(\r\n    <div className=\"weather-app\">\r\n      <h1 className=\"app-title\">Weather App</h1>\r\n      <div className=\"weather-box\">\r\n        <CityInput parentCallBack={this.callbackFunction} /> \r\n        {errorOutput}\r\n        {weatherOutput}\r\n      </div>\r\n    </div>\r\n\r\n\r\n   )\r\n }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}